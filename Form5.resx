<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vmlburklcK0AAAAASUVORK5CYII=
</value>
  </data>
</root>